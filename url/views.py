from django.contrib import messages
from django.http import HttpResponsePermanentRedirect, HttpResponseRedirect
from django.shortcuts import get_object_or_404, render
from django.urls import reverse

from .forms import UrlForm
from .models import Url
from .tools import hash_id


def home(request):
    if request.method == "POST":
        form = UrlForm(request.POST)
        if form.is_valid():
            code = form.cleaned_data["code"]
            url = form.cleaned_data["full_url"]

            if code and Url.objects.filter(code__exact=code):
                messages.warning(
                    request,
                    "This code is already taken, please type in another one or leave this field empty for autogenerated code",
                )
                return render(
                    request,
                    "url/url_form.html",
                    {"form": form, "absolute_url": request.build_absolute_uri()},
                )
            elif code:
                new_url = Url(full_url=url, code=code)
            else:
                new_url = Url(full_url=url)
                new_url.save()
                new_url.code = hash_id(new_url.id)
            new_url.save()
            return HttpResponseRedirect(reverse("url:url-detail", args=(new_url.code,)))
    else:
        form = UrlForm()
    return render(
        request,
        "url/url_form.html",
        {"form": form, "absolute_url": request.build_absolute_uri()},
    )


def detail(request, code):
    obj = get_object_or_404(Url, code__exact=code)
    return render(
        request,
        "url/url_detail.html",
        {
            "short_url": request.build_absolute_uri(reverse("url:url-home")) + obj.code,
            "full_url": obj.full_url,
        },
    )


def redirect(request, code):
    obj = get_object_or_404(Url, code__exact=code)
    return HttpResponsePermanentRedirect(obj.full_url)
